name: Deploy Diagram Artifacts to release branch

on:
  push:
    tags:
      - '*'  # Runs when a tag is pushed

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we can retrieve tags

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            ~/node_modules
          # List all files containing dependencies
          key: cljdeps-release-${{ hashFiles('deps.edn', 'package.json', 'bb.edn') }}
          restore-keys: cljdeps-release-

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.11.4.1474              # Clojure CLI based on tools.deps
          bb: 1.12.196                 # Babashka
          #clj-kondo: 2022.05.31        # Clj-kondo

      - name: Get version identifier
        id: version
        run: |
          TAG=$(git describe --tags --always --dirty)
          echo "tag=${TAG}" >> $GITHUB_ENV
          echo "Tag resolved: ${TAG}"

      - name: Clojure Tests incl examples
        run: |
          clojure -M:examples:cljs-diagram:test-cli          

      - name: Shadow CLJS Release Build diagram SPA main.js w/ source map
        run: |
          npm install
          clojure -M:cljs-diagram:build release diagram
          mkdir -p app
          cp -v public/diagram-js/main.js app/main.js
          cp -v public/diagram-js/main.js.map app/main.js.map

      - name: Create and push branch from tag
        run: |
          INITIAL_COMMIT_SHA="2434633297535796e1390198f5521a9249cb19ab"
          BRANCH_NAME=r${{ github.ref_name }} 
          git fetch origin || echo "No existing remote branches found"          
          # Create a new branch from the tag
          git checkout -b $BRANCH_NAME $INITIAL_COMMIT_SHA
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"        
          # Add and commit the generated files
          git add app/main.js app/main.js.map
          git commit -m "Add generated artifacts for tag $BRANCH_NAME"          
          # Push the new branch
          git push origin $BRANCH_NAME
