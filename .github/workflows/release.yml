name: Deploy Diagram Artifact at Github release

on:
  push:
    tags:
      - '*'  # Runs when a tag is pushed

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we can retrieve tags

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            ~/node_modules
          # List all files containing dependencies
          key: cljdeps-release-${{ hashFiles('deps.edn', 'package.json', 'bb.edn') }}
          restore-keys: cljdeps-release-

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.11.4.1474              # Clojure CLI based on tools.deps
          bb: 1.12.196                 # Babashka
          #clj-kondo: 2022.05.31        # Clj-kondo

      - name: Get version identifier
        id: version
        run: |
          TAG=$(git describe --tags --always --dirty)
          echo "tag=${TAG}" >> $GITHUB_ENV
          echo "Tag resolved: ${TAG}"

      - name: Clojure Tests incl examples
        run: |
          clojure -M:examples:cljs-diagram:test-cli          

      - name: Shadow CLJS Release Build diagram SPA main.js w/ source map
        run: |
          npm install
          clojure -M:cljs-diagram:build release diagram          

      # https://github.com/ncipollo/release-action
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated release of the JavaScript artifact generated from ClojureScript.
          artifacts: public/diagram-js/main.js,public/diagram-js/main.js.map
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
